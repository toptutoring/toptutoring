$(function() {
  if (document.getElementById('opentok-container')) {
    // Initialize an OpenTok Session object
    var session = OT.initSession(opentokApiKey, opentokSessionId);

    // Initialize a Publisher, and place it into the element with id="publisher"
    var publisher = OT.initPublisher('opentok-publisher', {
      insertMode: 'append',
      width: '100%',
      height: '100%',
    }, function(error) {
      if (error) {
        console.error('Failed to initialise publisher', error);
      }
    });

    // Attach event handlers
    session.on({

      // This function runs when session.connect() asynchronously completes
      sessionConnected: function(event) {
        // Publish the publisher we initialzed earlier (this will trigger 'streamCreated' on other
        // clients)
        session.publish(publisher, function(error) {
          if (error) {
            console.error('Failed to publish', error);
          }
        });
      },

      // This function runs when another client publishes a stream (eg. session.publish())
      streamCreated: function(event) {
        // Create a container for a new Subscriber, assign it an id using the streamId, put it inside
        // the element with id="subscribers"
        var subContainer = document.createElement('div');
        subContainer.id = 'stream-' + event.stream.streamId;
        document.getElementById('opentok-subscriber').appendChild(subContainer);

        // Subscribe to the stream that caused this event, put it inside the container we just made
        session.subscribe(event.stream, subContainer, function(error) {
          if (error) {
            console.error('Failed to subscribe', error);
          }
        });
      }

    });

    // Connect to the Session using a 'token'
    session.connect(opentokToken, function(error) {
      if (error) {
        console.error('Failed to connect', error);
      }
    });
  }
});
