{"version":3,"file":"chartist-plugin-tooltip.min.js","sources":["chartist-plugin-tooltip.js"],"names":["root","factory","define","amd","returnExportsGlobal","exports","module","this","window","document","Chartist","show","element","style","display","hide","hasClass","className","getAttribute","indexOf","next","nextSibling","text","innerText","textContent","defaultOptions","currency","undefined","tooltipOffset","x","y","plugins","tooltip","options","extend","chart","on","event","selector","callback","$chart","addEventListener","e","target","setPosition","height","$toolTip","offsetHeight","width","offsetWidth","top","layerY","offsetY","left","layerX","offsetX","tooltipSelector","Bar","Pie","donut","container","querySelector","createElement","appendChild","$point","tooltipText","meta","value","tooltipFnc","label","length","replace","innerHTML","tooltips"],"mappings":";;;;;;CAAC,SAAUA,EAAMC,GACO,kBAAXC,SAAyBA,OAAOC,IAEzCD,UAAW,WACT,MAAQF,GAAKI,oBAAsBH,MAET,gBAAZI,SAIhBC,OAAOD,QAAUJ,IAEjBD,EAAK,6BAA+BC,KAEtCM,KAAM,WAkJN,MA3IC,UAAUC,EAAQC,EAAUC,GACzB,YAiHA,SAASC,GAAKC,GACVA,EAAQC,MAAMC,QAAU,QAG5B,QAASC,GAAKH,GACVA,EAAQC,MAAMC,QAAU,OAG5B,QAASE,GAASJ,EAASK,GACvB,OAAQ,IAAML,EAAQM,aAAa,SAAW,KAAKC,QAAQ,IAAMF,EAAY,KAAO,GAGxF,QAASG,GAAKR,EAASK,GACnB,EACIL,GAAUA,EAAQS,kBACbT,IAAYI,EAASJ,EAASK,GACvC,OAAOL,GAGX,QAASU,GAAKV,GACV,MAAOA,GAAQW,WAAaX,EAAQY,YAnIxC,GAAIC,IACAC,SAAUC,OACVC,eACIC,EAAG,EACHC,EAAG,KAYXpB,GAASqB,QAAUrB,EAASqB,YAC5BrB,EAASqB,QAAQC,QAAU,SAAUC,GAIjC,MAFAA,GAAUvB,EAASwB,UAAWT,EAAgBQ,GAEvC,SAAiBE,GAyBpB,QAASC,GAAGC,EAAOC,EAAUC,GACzBC,EAAOC,iBAAiBJ,EAAO,SAAUK,KAChCJ,GAAYtB,EAAS0B,EAAEC,OAAQL,KAChCC,EAASG,KAkDrB,QAASE,GAAYP,GAIjBQ,EAASA,GAAUC,EAASC,aAC5BC,EAAQA,GAASF,EAASG,YAC1BH,EAASjC,MAAMqC,KAAOb,EAAMc,QAAUd,EAAMe,SAAWP,EAASZ,EAAQL,cAAcE,EAAI,KAC1FgB,EAASjC,MAAMwC,MAAQhB,EAAMiB,QAAUjB,EAAMkB,SAAWP,EAAQ,EAAIf,EAAQL,cAAcC,EAAI,KApFlG,GAAI2B,GAAkB,UAClBrB,aAAiBzB,GAAS+C,IAC1BD,EAAkB,SACXrB,YAAiBzB,GAASgD,MAG7BF,EADArB,EAAMF,QAAQ0B,MACI,iBAEA,eAI1B,IAAInB,GAASL,EAAMyB,UACfd,EAAWN,EAAOqB,cAAc,oBAC/Bf,KACDA,EAAWrC,EAASqD,cAAc,OAClChB,EAAS7B,UAAY,mBACrBuB,EAAOuB,YAAYjB,GAEvB,IAAID,GAASC,EAASC,aAClBC,EAAQF,EAASG,WAErBlC,GAAK+B,GASLV,EAAG,YAAaoB,EAAiB,SAAUnB,GACvC,GAAI2B,GAAS3B,EAAMM,OACfsB,EAAc,GAEdC,EAAOF,EAAO9C,aAAa,YAAc,GACzCiD,EAAQH,EAAO9C,aAAa,WAEhC,IAAIe,EAAQmC,WACRH,EAAchC,EAAQmC,WAAWF,EAAMC,OACpC,CACH,GAAID,EACAD,GAAeC,EAAO,WAItB,IAAI/B,YAAiBzB,GAASgD,IAAK,CAC/B,GAAIW,GAAQjD,EAAK4C,EAAQ,WACrBK,GAAMC,OAAS,IACfL,GAAe3C,EAAK+C,GAAS,QAKrCpC,EAAQP,WACRyC,EAAQlC,EAAQP,SAAWyC,EAAMI,QAAQ,+BAAgC,QAE7EN,GAAeE,EAGnBrB,EAAS0B,UAAYP,EACrBrB,EAAYP,GACZ1B,EAAKmC,GAGLD,EAASC,EAASC,aAClBC,EAAQF,EAASG,cAGrBb,EAAG,WAAYoB,EAAiB,WAC5BzC,EAAK+B,KAGTV,EAAG,YAAa,KAAM,SAAUC,GAC5BO,EAAYP,QAsCzB7B,OAAQC,SAAUC,UAEdA,SAASqB,QAAQ0C","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.returnExportsGlobal = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist.plugins.tooltips'] = factory();\n  }\n}(this, function () {\n\n  /**\r\n   * Chartist.js plugin to display a data label on top of the points in a line chart.\r\n   *\r\n   */\r\n  /* global Chartist */\r\n  (function (window, document, Chartist) {\r\n      'use strict';\r\n\r\n      var defaultOptions = {\r\n          currency: undefined,\r\n          tooltipOffset: {\r\n              x: 0,\r\n              y: -20\r\n          }\r\n          // showTooltips: true,\r\n          // tooltipEvents: ['mousemove', 'touchstart', 'touchmove'],\r\n          // labelClass: 'ct-label',\r\n          // labelOffset: {\r\n          //   x: 0,\r\n          //   y: -10\r\n          // },\r\n          // textAnchor: 'middle'\r\n      };\r\n\r\n      Chartist.plugins = Chartist.plugins || {};\r\n      Chartist.plugins.tooltip = function (options) {\r\n\r\n          options = Chartist.extend({}, defaultOptions, options);\r\n\r\n          return function tooltip(chart) {\r\n              var tooltipSelector = 'ct-point';\r\n              if (chart instanceof Chartist.Bar) {\r\n                  tooltipSelector = 'ct-bar';\r\n              } else if (chart instanceof Chartist.Pie) {\r\n                  // Added support for donut graph\r\n                  if (chart.options.donut) {\r\n                      tooltipSelector = 'ct-slice-donut';\r\n                  } else {\r\n                      tooltipSelector = 'ct-slice-pie';\r\n                  }\r\n              }\r\n\r\n              var $chart = chart.container;\r\n              var $toolTip = $chart.querySelector('.chartist-tooltip');\r\n              if (!$toolTip) {\r\n                  $toolTip = document.createElement('div');\r\n                  $toolTip.className = 'chartist-tooltip';\r\n                  $chart.appendChild($toolTip);\r\n              }\r\n              var height = $toolTip.offsetHeight;\r\n              var width = $toolTip.offsetWidth;\r\n\r\n              hide($toolTip);\r\n\r\n              function on(event, selector, callback) {\r\n                  $chart.addEventListener(event, function (e) {\r\n                      if (!selector || hasClass(e.target, selector))\r\n                          callback(e);\r\n                  });\r\n              }\r\n\r\n              on('mouseover', tooltipSelector, function (event) {\r\n                  var $point = event.target;\r\n                  var tooltipText = '';\r\n\r\n                  var meta = $point.getAttribute('ct:meta') || '';\r\n                  var value = $point.getAttribute('ct:value');\r\n\r\n                  if (options.tooltipFnc) {\r\n                      tooltipText = options.tooltipFnc(meta, value);\r\n                  } else {\r\n                      if (meta) {\r\n                          tooltipText += meta + '<br>';\r\n                      } else {\r\n                          // For Pie Charts also take the labels into account\r\n                          // Could add support for more charts here as well!\r\n                          if (chart instanceof Chartist.Pie) {\r\n                              var label = next($point, 'ct-label');\r\n                              if (label.length > 0) {\r\n                                  tooltipText += text(label) + '<br>';\r\n                              }\r\n                          }\r\n                      }\r\n\r\n                      if (options.currency) {\r\n                          value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\r\n                      }\r\n                      tooltipText += value;\r\n                  }\r\n\r\n                  $toolTip.innerHTML = tooltipText;\r\n                  setPosition(event);\r\n                  show($toolTip);\r\n\r\n                  // Remember height and width to avoid wrong position in IE\r\n                  height = $toolTip.offsetHeight;\r\n                  width = $toolTip.offsetWidth;\r\n              });\r\n\r\n              on('mouseout', tooltipSelector, function () {\r\n                  hide($toolTip);\r\n              });\r\n\r\n              on('mousemove', null, function (event) {\r\n                  setPosition(event);\r\n              });\r\n\r\n              function setPosition(event) {\r\n                  // For some reasons, on FF, we can't rely on event.offsetX and event.offsetY,\r\n                  // that's why we prioritize event.layerX and event.layerY\r\n                  // see https://github.com/gionkunz/chartist-js/issues/381\r\n                  height = height || $toolTip.offsetHeight;\r\n                  width = width || $toolTip.offsetWidth;\r\n                  $toolTip.style.top = (event.layerY || event.offsetY) - height + options.tooltipOffset.y + 'px';\r\n                  $toolTip.style.left = (event.layerX || event.offsetX) - width / 2 + options.tooltipOffset.x + 'px';\r\n              }\r\n          }\r\n      };\r\n\r\n      function show(element) {\r\n          element.style.display = 'block';\r\n      }\r\n\r\n      function hide(element) {\r\n          element.style.display = 'none';\r\n      }\r\n\r\n      function hasClass(element, className) {\r\n          return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\r\n      }\r\n\r\n      function next(element, className) {\r\n          do {\r\n              element = element.nextSibling;\r\n          } while (element && !hasClass(element, className));\r\n          return element;\r\n      }\r\n\r\n      function text(element) {\r\n          return element.innerText || element.textContent;\r\n      }\r\n\r\n  } (window, document, Chartist));\r\n\n  return Chartist.plugins.tooltips;\n\n}));\n"]}